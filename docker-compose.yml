services:
  auth_db:
    image: postgres:15
    container_name: "${AUTH_DATABASE_HOST}"
    environment:
      POSTGRES_USER: "${AUTH_POSTGRES_USER}"
      POSTGRES_PASSWORD: "${AUTH_POSTGRES_PASSWORD}"
      POSTGRES_DB: "${AUTH_POSTGRES_DB}"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    ports:
      - "${AUTH_POSTGRES_PORT}:5432"
    networks:
      - app-network
  
  auth_migrate:
    build:
      context: ./auth_service 
    platform: linux/amd64
    depends_on:
      - auth_db 
    env_file:
      - .env
    networks:
      - app-network
    command: ["/bin/sh", "-c", "alembic stamp head && alembic revision --autogenerate -m \"Migration\" && alembic upgrade head && alembic stamp head"]

  # transaction_db:
  #   image: postgres:15
  #   container_name: transaction_db
  #   environment:
  #     POSTGRES_USER: trans_user
  #     POSTGRES_PASSWORD: trans_pass
  #     POSTGRES_DB: transaction_db
  #   volumes:
  #     - transaction_db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5433:5432"
  #   networks:
  #     - app-network

  auth_service:
    build:
      context: ./auth_service
    platform: linux/amd64
    container_name: auth_service
    env_file:
      - .env
    depends_on:
      - auth_db
      - auth_migrate
    volumes:
      - ./logs/auth_service:${AUTH_LOGS_DIR}
    ports:
      - "8000:8000"
    networks:
      - app-network
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  # transaction_service:
  #   build:
  #     context: ./transaction_service
  #   container_name: transaction_service
  #   env_file:
  #     - ./transaction_service/.env
  #   depends_on:
  #     - transaction_db
  #     - auth_service
  #   ports:
  #     - "8001:8001"
  #   networks:
  #     - app-network

volumes:
  auth_db_data:
  transaction_db_data:

networks:
  app-network:
    driver: bridge
